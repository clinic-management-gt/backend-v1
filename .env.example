# ==============================================
# ENVIRONMENT CONFIGURATION
# ==============================================
# Valores posibles: Development, Staging, Production
#
# - Development: Seeder completo con 100 pacientes de prueba
#   └─ Ideal para: Desarrollo local, testing del frontend
#
# - Staging: Seeder completo con 100 pacientes de prueba
#   └─ Ideal para: Ambiente de test/QA antes de producción
#
# - Production: Solo usuarios esenciales y catálogos (SIN pacientes de prueba)
#   └─ Ideal para: Ambiente de producción real
#
# ⚠️ IMPORTANTE: En producción, usar ASPNETCORE_ENVIRONMENT=Production
ASPNETCORE_ENVIRONMENT=Development

# ==============================================
# DATABASE CONFIGURATION
# ==============================================
POSTGRES_USER=your_database_user
POSTGRES_PASSWORD=your_secure_password
POSTGRES_DB=clinicaPediatrica
DB_HOST=db
DB_PORT=5432

# ==============================================
# CLOUDFLARE R2 CONFIGURATION
# ==============================================
# Obtén estos valores desde tu dashboard de Cloudflare R2
Cloudflare__AccountId=your_cloudflare_account_id
Cloudflare__R2AccessKey=your_r2_access_key
Cloudflare__R2SecretKey=your_r2_secret_key
Cloudflare__R2BucketName=your_bucket_name
Cloudflare__PublicBase=https://your-public-url.r2.dev

# ==============================================
# INSTRUCCIONES DE USO
# ==============================================
# 1. Copia este archivo y renómbralo a .env
#    cp .env.example .env
#
# 2. Edita .env con tus valores reales
#
# 3. Para cambiar de ambiente, modifica ASPNETCORE_ENVIRONMENT
#    - Para desarrollo: ASPNETCORE_ENVIRONMENT=Development
#    - Para producción: ASPNETCORE_ENVIRONMENT=Production
#
# 4. Reinicia Docker para aplicar cambios:
#    docker compose down
#    docker volume rm backend-v1_postgres_data
#    docker compose up --build -d
#
